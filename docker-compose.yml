version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:latest
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    restart: on-failure
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100

  #  schema-registry:
  #    image: confluentinc/cp-schema-registry:latest
  #    depends_on:
  #      - zookeeper
  #      - kafka
  #    environment:
  #      SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
  #
  #
  #  primary-ksqldb-server:
  #    image: confluentinc/ksqldb-server:latest
  #    hostname: primary-ksqldb-server
  #    container_name: primary-ksqldb-server
  #    depends_on:
  #      - kafka
  #      - schema-registry
  #    ports:
  #      - "8088:8088"
  #    environment:
  #      KSQL_LISTENERS: http://0.0.0.0:8088
  #      KSQL_BOOTSTRAP_SERVERS: kafka:9092
  #      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  #      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
  #      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
  #
  #  additional-ksqldb-server:
  #    image: confluentinc/ksqldb-server:latest
  #    hostname: additional-ksqldb-server
  #    depends_on:
  #      - primary-ksqldb-server
  #    ports:
  #      - "8090"
  #    environment:
  #      KSQL_LISTENERS: http://0.0.0.0:8090
  #      KSQL_BOOTSTRAP_SERVERS: kafka:9092
  #      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  #
  #  # Access the cli by running:
  #  # > docker-compose exec ksqldb-cli  ksql http://primary-ksqldb-server:8088
  #  ksqldb-cli:
  #    image: confluentinc/ksqldb-cli:latest
  #    container_name: ksqldb-cli
  #    depends_on:
  #      - primary-ksqldb-server
  #    entrypoint: /bin/sh
  #    tty: true
  #
  postgres:
    image: postgres:alpine
    ports:
      - "5432:5432"
    restart: on-failure
    environment:
      - POSTGRES_PASSWORD=6dd19449ae784f769e30f623ab43e53e
      - POSTGRES_USER=admin
      - POSTGRES_DB=postgres

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: on-failure
    command: "redis-server --notify-keyspace-events Ex"